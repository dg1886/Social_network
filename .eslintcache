[{"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx":"1","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx":"2","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx":"3","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx":"4","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"5","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"6","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"7","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx":"8","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx":"9","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx":"10","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx":"11","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx":"12","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx":"13","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx":"14","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"15","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"16","C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx":"17","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx":"18","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx":"19","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx":"20","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx":"21","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"22","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\Users.tsx":"23","C:\\works\\itcamasutra.by\\social_network\\src\\api\\api.tsx":"24","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-reducer.tsx":"25","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\login.tsx":"26","C:\\works\\itcamasutra.by\\social_network\\src\\hoc\\withAuthRedirect.tsx":"27","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"28","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\LoginForm.tsx":"29","C:\\works\\itcamasutra.by\\social_network\\src\\utils\\validators\\validators.tsx":"30","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\FormsControls\\FormsControls.tsx":"31","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\app-reducer.tsx":"32","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-selectors.ts":"33","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"34"},{"size":2678,"mtime":1619864976152,"results":"35","hashOfConfig":"36"},{"size":3796,"mtime":1621249380888,"results":"37","hashOfConfig":"36"},{"size":3363,"mtime":1619523441622,"results":"38","hashOfConfig":"36"},{"size":3175,"mtime":1621261046518,"results":"39","hashOfConfig":"36"},{"size":2512,"mtime":1618224655990,"results":"40","hashOfConfig":"36"},{"size":483,"mtime":1608644734488,"results":"41","hashOfConfig":"36"},{"size":501,"mtime":1608642801450,"results":"42","hashOfConfig":"36"},{"size":1766,"mtime":1618062726459,"results":"43","hashOfConfig":"36"},{"size":460,"mtime":1618222447149,"results":"44","hashOfConfig":"36"},{"size":307,"mtime":1613910605014,"results":"45","hashOfConfig":"36"},{"size":307,"mtime":1608901535726,"results":"46","hashOfConfig":"36"},{"size":3484,"mtime":1619867344848,"results":"47","hashOfConfig":"36"},{"size":3155,"mtime":1615131621938,"results":"48","hashOfConfig":"36"},{"size":755,"mtime":1617964958287,"results":"49","hashOfConfig":"36"},{"size":3493,"mtime":1620746906316,"results":"50","hashOfConfig":"36"},{"size":1068,"mtime":1617723567060,"results":"51","hashOfConfig":"36"},{"size":972,"mtime":1612518366983,"results":"52","hashOfConfig":"36"},{"size":1054,"mtime":1613208606738,"results":"53","hashOfConfig":"36"},{"size":3136,"mtime":1621258157285,"results":"54","hashOfConfig":"36"},{"size":2871,"mtime":1619180369525,"results":"55","hashOfConfig":"36"},{"size":984,"mtime":1619784965871,"results":"56","hashOfConfig":"36"},{"size":1267,"mtime":1618062282789,"results":"57","hashOfConfig":"36"},{"size":2610,"mtime":1616935674342,"results":"58","hashOfConfig":"36"},{"size":2334,"mtime":1621264754857,"results":"59","hashOfConfig":"36"},{"size":6122,"mtime":1621267695225,"results":"60","hashOfConfig":"36"},{"size":1131,"mtime":1619698007785,"results":"61","hashOfConfig":"36"},{"size":790,"mtime":1616770560390,"results":"62","hashOfConfig":"36"},{"size":1874,"mtime":1617804705990,"results":"63","hashOfConfig":"36"},{"size":1586,"mtime":1619702006358,"results":"64","hashOfConfig":"36"},{"size":533,"mtime":1619185594622,"results":"65","hashOfConfig":"36"},{"size":856,"mtime":1619187303824,"results":"66","hashOfConfig":"36"},{"size":1538,"mtime":1619797315996,"results":"67","hashOfConfig":"36"},{"size":1787,"mtime":1621262552999,"results":"68","hashOfConfig":"36"},{"size":1762,"mtime":1620660950954,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"rwg8km",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx",["155"],"import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter, RouteComponentProps} from 'react-router-dom';\nimport {StateActionsTypes, StateType} from './redux/store';\nimport {rootAppStateType, StoreReduxType} from \"./redux/redux-store\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileInfo/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\n\n\n\nexport type AppType = {\n    store: StoreReduxType\n    state: StateType\n    // addPost: () => void\n    // updateNewPostText: (newText: string) => void\n    dispatch: (action: StateActionsTypes) => void\n}\ntype AppMapStateToPropsType = {\n    initialized: boolean\n}\ntype AppMapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppPropsType = AppMapDispatchToPropsType & AppMapStateToPropsType\n\nclass App extends React.Component<AppPropsType> {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\nrender() {\n        if (!this.props.initialized)\n        {return <Preloader/>}\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>\n                           }/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </BrowserRouter>);\n}\n}\nconst MapStateToProps = (state: rootAppStateType) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(withRouter,\n    connect(MapStateToProps, {initializeApp})) (App)\n\n\n// <BrowserRouter>\n//     <div className='app-wrapper'>\n//         <Header/>\n//         <Navbar/>\n//         <div className='app-wrapper-content'>\n//             <Route path='/dialogs' render={ () => <DialogsContainer store={store}  />}/>\n//             <Route path='/profile' render={ () => <Profile\n//                 store={store}/>\n//             }/>\n//         </div>\n//     </div>\n// </BrowserRouter>",["156","157"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx",["158"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx",["159"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["160"],"import React from 'react';\r\nimport {addPostActionCreator} from\"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport {rootAppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type propsPostType = {\r\n//     store: StoreReduxType\r\n//     profilePage: ProfilePageType\r\n// }\r\n//\r\n\r\n\r\n\r\nlet mapStateToProps = (state: rootAppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        // newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        // updateNewPostText: (text: string) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n/*    const MyPostsContainer = (props: any) => {\r\n\r\n\r\n        return (\r\n            <StoreContext.Consumer>\r\n                {(store: any) => {\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator(store.getState().profilePage.newPostText))\r\n\r\n                    }\r\n                    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n                        store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n                    }\r\n\r\n                    return <MyPosts updateNewPostText={onPostChange}\r\n                                    addPost={addPost}\r\n                                    postsElements={store.getState().profilePage.posts}\r\n                        // store={store}\r\n                    />\r\n                }\r\n\r\n                }\r\n            </StoreContext.Consumer>\r\n        )\r\n\r\n    }*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const MyPostsContainer = (props: propsPostType) => {\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator(props.profilePage.newPostText))\r\n//\r\n//     }\r\n//     let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n//\r\n//         props.store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n//     }\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  postsElements={props.profilePage.posts}\r\n//                  store={store}\r\n//         />\r\n//     )\r\n//\r\n// }","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",["161"],"import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype DialogItem = {\r\n    name: string\r\n    id: number   ////refactor in string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItem) => {\r\n\r\n    let path ='/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["162","163"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx",["164"],"\r\nimport {MessagePageType, StateActionsTypes} from \"./store\";\r\n\r\n// export const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport type DialogsActionsTypes =   | ReturnType<typeof sendMessageCreator>\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Igar FatPunch'},\r\n        {id: 2, name: 'Sizy Dog'},\r\n        {id: 3, name: 'Sashka Pravoslavnenky'},\r\n        {id: 4, name: 'Sashka Veter'},\r\n        {id: 5, name: 'Martin Borman'},\r\n        {id: 6, name: 'Michail Redwood'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'What a fuck?'},\r\n        {id: 2, message: 'All Cops Are Bastards'},\r\n        {id: 3, message: 'Yo nigga!'}\r\n    ]\r\n    // newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state: MessagePageType = initialState, action: StateActionsTypes) => {\r\nlet stateCopy\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     }\r\n        //     // state.newMessageBody = action.body\r\n        //\r\n        // }\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                // newMessageBody: '',\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string) => ({type: SEND_MESSAGE, newMessageBody }) as const\r\n// export const updateNewMessageBodyCreator = (body: string) => {\r\n//     return {\r\n//         type: UPDATE_NEW_MESSAGE_BODY,\r\n//         body: body\r\n//     } as const\r\n// }\r\n\r\nexport default dialogsReducer","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx",["165"],"import styles from \"../../Users/users.module.css\";\r\nimport preloaderImg from \"../../../img/loading/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div\r\n        className={styles.preloader}>\r\n        <img src={preloaderImg}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader",["166","167"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx",["168"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx",[],["169","170"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["171"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\n\r\nconst ProfileInfo = (props: any) => {\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    console.log(props.profile.contacts)\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img src= {'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>*/}\r\n            {/*</div>*/}\r\n            <div className = {s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"User photo\"/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>User name: {props.profile.fullName}</div>\r\n                {/*<div>{props.profile.lookingForAJob}</div>*/}\r\n                {/*<div>{props.profile.lookingForAJobDescription}</div>*/}\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;",["172","173"],"C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx",["174","175"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx",["176","177","178","179"],"import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from './Dialogs.module.css'\r\n// import { NavLink } from 'react-router-dom';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport store, {rootAppStateType, StoreReduxType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    SendMessage: (values: string) => void\r\n    isAuth: boolean\r\n\r\n}\r\nexport type DialogsFormDatatype = {\r\n    newMessageBody: string\r\n    addNewMessage: (values: string) => void\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let dialogsElements = store.getState().messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = store.getState().messagesPage.messages.map(m => <Message message={m.message}/>)\r\n    // let newMessageBody = store.getState().messagesPage.newMessageBody\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.SendMessage()\r\n    // }\r\n\r\n\r\n    // let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     props.updateNewMessageBody(e.currentTarget.value)\r\n    // }\r\n\r\n    // let onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if ((event.ctrlKey) && (event.charCode === 13)) {\r\n    //         props.SendMessage();\r\n    //     }\r\n    // }\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.SendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (props.isAuth === false) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength70 = maxLengthCreator(70)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<DialogsFormDatatype>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[requiredField, maxLength70]}\r\n                       name={'newMessageBody'}\r\n                       placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<DialogsFormDatatype>(\r\n    {form: 'dialogAddMessageForm'}) (AddMessageForm)\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["180","181"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx",["182"],"import React from 'react';\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {rootAppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\ntype Own = {}\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype MapDispatchType = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    // componentDidMount() {\r\n    //     // this.props.setToggleIsFetching(true)\r\n    //     this.props.getAuthUserData()\r\n    // }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: rootAppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login || ''\r\n})\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchType, Own, rootAppStateType>(mapStateToProps, {logout} ) (HeaderContainer)","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],["183","184"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\Users.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\api\\api.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-reducer.tsx",["185","186"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\login.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["187"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\utils\\validators\\validators.tsx",["188"],"import React from 'react'\r\n\r\nexport type maxLengthCreatorType = ReturnType<typeof maxLengthCreator>\r\n\r\nexport const requiredField = (value: string) => {\r\n    if(value) return undefined\r\n    else {\r\n        return 'Field is required'\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    else {\r\n        return undefined\r\n    }\r\n}\r\n// export const maxLength30: maxLengthCreatorType = maxLengthCreator(30)\r\n","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\FormsControls\\FormsControls.tsx",[],["189","190"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\app-reducer.tsx",["191","192","193"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-selectors.ts",["194"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",["195"],{"ruleId":"196","severity":1,"message":"197","line":4,"column":43,"nodeType":"198","messageId":"199","endLine":4,"endColumn":62},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":9,"nodeType":"206","endLine":14,"endColumn":2755},{"ruleId":"196","severity":1,"message":"207","line":15,"column":5,"nodeType":"198","messageId":"199","endLine":15,"endColumn":20},{"ruleId":"196","severity":1,"message":"208","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"209","severity":1,"message":"210","line":11,"column":7,"nodeType":"198","messageId":"211","endLine":11,"endColumn":17},{"ruleId":"200","replacedBy":"212"},{"ruleId":"202","replacedBy":"213"},{"ruleId":"196","severity":1,"message":"214","line":27,"column":5,"nodeType":"198","messageId":"199","endLine":27,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":9,"column":9,"nodeType":"206","endLine":9,"endColumn":34},{"ruleId":"200","replacedBy":"215"},{"ruleId":"202","replacedBy":"216"},{"ruleId":"196","severity":1,"message":"217","line":1,"column":9,"nodeType":"198","messageId":"199","endLine":1,"endColumn":20},{"ruleId":"200","replacedBy":"218"},{"ruleId":"202","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":18,"column":17,"nodeType":"206","endLine":18,"endColumn":73},{"ruleId":"200","replacedBy":"222"},{"ruleId":"202","replacedBy":"223"},{"ruleId":"196","severity":1,"message":"224","line":4,"column":22,"nodeType":"198","messageId":"199","endLine":4,"endColumn":35},{"ruleId":"196","severity":1,"message":"208","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":13},{"ruleId":"196","severity":1,"message":"217","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"196","severity":1,"message":"225","line":1,"column":29,"nodeType":"198","messageId":"199","endLine":1,"endColumn":42},{"ruleId":"196","severity":1,"message":"226","line":6,"column":16,"nodeType":"198","messageId":"199","endLine":6,"endColumn":32},{"ruleId":"196","severity":1,"message":"227","line":6,"column":34,"nodeType":"198","messageId":"199","endLine":6,"endColumn":48},{"ruleId":"200","replacedBy":"228"},{"ruleId":"202","replacedBy":"229"},{"ruleId":"196","severity":1,"message":"230","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":13},{"ruleId":"200","replacedBy":"231"},{"ruleId":"202","replacedBy":"232"},{"ruleId":"196","severity":1,"message":"233","line":1,"column":53,"nodeType":"198","messageId":"199","endLine":1,"endColumn":66},{"ruleId":"196","severity":1,"message":"234","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":24},{"ruleId":"196","severity":1,"message":"235","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":9},{"ruleId":"196","severity":1,"message":"208","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"200","replacedBy":"236"},{"ruleId":"202","replacedBy":"237"},{"ruleId":"196","severity":1,"message":"208","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"238","line":5,"column":9,"nodeType":"198","messageId":"199","endLine":5,"endColumn":17},{"ruleId":"196","severity":1,"message":"239","line":32,"column":6,"nodeType":"198","messageId":"199","endLine":32,"endColumn":15},{"ruleId":"196","severity":1,"message":"240","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"235","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":9},"@typescript-eslint/no-unused-vars","'RouteComponentProps' is defined but never used.","Identifier","unusedVar","no-native-reassign",["241"],"no-negated-in-lhs",["242"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getUserSelector' is defined but never used.","'React' is defined but never used.","@typescript-eslint/no-redeclare","'DialogItem' is already defined.","redeclared",["241"],["242"],"'stateCopy' is defined but never used.",["241"],["242"],"'ChangeEvent' is defined but never used.",["241"],["242"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["241"],["242"],"'ThunkDispatch' is defined but never used.","'KeyboardEvent' is defined but never used.","'rootAppStateType' is defined but never used.","'StoreReduxType' is defined but never used.",["241"],["242"],"'axios' is defined but never used.",["241"],["242"],"'UsersPageType' is defined but never used.","'APIResponseType' is defined but never used.","'s' is defined but never used.",["241"],["242"],"'Dispatch' is defined but never used.","'ThunkType' is defined but never used.","'UsersType' is defined but never used.","no-global-assign","no-unsafe-negation"]