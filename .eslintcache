[{"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx":"1","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx":"2","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx":"3","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx":"4","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"5","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"6","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"7","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx":"8","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx":"9","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx":"10","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx":"11","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx":"12","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx":"13","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx":"14","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"15","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"16","C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx":"17","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx":"18","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx":"19","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx":"20","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx":"21","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"22","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\Users.tsx":"23","C:\\works\\itcamasutra.by\\social_network\\src\\api\\api.tsx":"24","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-reducer.tsx":"25","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\login.tsx":"26","C:\\works\\itcamasutra.by\\social_network\\src\\hoc\\withAuthRedirect.tsx":"27","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"28","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\LoginForm.tsx":"29","C:\\works\\itcamasutra.by\\social_network\\src\\utils\\validators\\validators.tsx":"30","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\FormsControls\\FormsControls.tsx":"31"},{"size":1880,"mtime":1616688482068,"results":"32","hashOfConfig":"33"},{"size":3398,"mtime":1618227823552,"results":"34","hashOfConfig":"33"},{"size":3327,"mtime":1619523319502,"results":"35","hashOfConfig":"33"},{"size":2595,"mtime":1616935674371,"results":"36","hashOfConfig":"33"},{"size":2512,"mtime":1618224655990,"results":"37","hashOfConfig":"33"},{"size":483,"mtime":1608644734488,"results":"38","hashOfConfig":"33"},{"size":501,"mtime":1608642801450,"results":"39","hashOfConfig":"33"},{"size":1766,"mtime":1618062726459,"results":"40","hashOfConfig":"33"},{"size":460,"mtime":1618222447149,"results":"41","hashOfConfig":"33"},{"size":307,"mtime":1613910605014,"results":"42","hashOfConfig":"33"},{"size":307,"mtime":1608901535726,"results":"43","hashOfConfig":"33"},{"size":3140,"mtime":1619707102363,"results":"44","hashOfConfig":"33"},{"size":3155,"mtime":1615131621938,"results":"45","hashOfConfig":"33"},{"size":755,"mtime":1617964958287,"results":"46","hashOfConfig":"33"},{"size":3469,"mtime":1619180369618,"results":"47","hashOfConfig":"33"},{"size":1068,"mtime":1617723567060,"results":"48","hashOfConfig":"33"},{"size":972,"mtime":1612518366983,"results":"49","hashOfConfig":"33"},{"size":1054,"mtime":1613208606738,"results":"50","hashOfConfig":"33"},{"size":2735,"mtime":1619703363541,"results":"51","hashOfConfig":"33"},{"size":2871,"mtime":1619180369525,"results":"52","hashOfConfig":"33"},{"size":1039,"mtime":1619523749147,"results":"53","hashOfConfig":"33"},{"size":1267,"mtime":1618062282789,"results":"54","hashOfConfig":"33"},{"size":2610,"mtime":1616935674342,"results":"55","hashOfConfig":"33"},{"size":1964,"mtime":1619703232051,"results":"56","hashOfConfig":"33"},{"size":5280,"mtime":1616425942926,"results":"57","hashOfConfig":"33"},{"size":1131,"mtime":1619698007785,"results":"58","hashOfConfig":"33"},{"size":790,"mtime":1616770560390,"results":"59","hashOfConfig":"33"},{"size":1874,"mtime":1617804705990,"results":"60","hashOfConfig":"33"},{"size":1632,"mtime":1619701887815,"results":"61","hashOfConfig":"33"},{"size":533,"mtime":1619185594622,"results":"62","hashOfConfig":"33"},{"size":856,"mtime":1619187303824,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rwg8km",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"89"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx",[],["139","140"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx",["141"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx",[],["142","143"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["144"],"import React from 'react';\r\nimport {addPostActionCreator} from\"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport {rootAppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type propsPostType = {\r\n//     store: StoreReduxType\r\n//     profilePage: ProfilePageType\r\n// }\r\n//\r\n\r\n\r\n\r\nlet mapStateToProps = (state: rootAppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        // newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        // updateNewPostText: (text: string) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n/*    const MyPostsContainer = (props: any) => {\r\n\r\n\r\n        return (\r\n            <StoreContext.Consumer>\r\n                {(store: any) => {\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator(store.getState().profilePage.newPostText))\r\n\r\n                    }\r\n                    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n                        store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n                    }\r\n\r\n                    return <MyPosts updateNewPostText={onPostChange}\r\n                                    addPost={addPost}\r\n                                    postsElements={store.getState().profilePage.posts}\r\n                        // store={store}\r\n                    />\r\n                }\r\n\r\n                }\r\n            </StoreContext.Consumer>\r\n        )\r\n\r\n    }*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const MyPostsContainer = (props: propsPostType) => {\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator(props.profilePage.newPostText))\r\n//\r\n//     }\r\n//     let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n//\r\n//         props.store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n//     }\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  postsElements={props.profilePage.posts}\r\n//                  store={store}\r\n//         />\r\n//     )\r\n//\r\n// }",["145","146"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",["147"],"import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype DialogItem = {\r\n    name: string\r\n    id: number   ////refactor in string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItem) => {\r\n\r\n    let path ='/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["148","149"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx",["150"],"\r\nimport {MessagePageType, StateActionsTypes} from \"./store\";\r\n\r\n// export const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport type DialogsActionsTypes =   | ReturnType<typeof sendMessageCreator>\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Igar FatPunch'},\r\n        {id: 2, name: 'Sizy Dog'},\r\n        {id: 3, name: 'Sashka Pravoslavnenky'},\r\n        {id: 4, name: 'Sashka Veter'},\r\n        {id: 5, name: 'Martin Borman'},\r\n        {id: 6, name: 'Michail Redwood'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'What a fuck?'},\r\n        {id: 2, message: 'All Cops Are Bastards'},\r\n        {id: 3, message: 'Yo nigga!'}\r\n    ]\r\n    // newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state: MessagePageType = initialState, action: StateActionsTypes) => {\r\nlet stateCopy\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     }\r\n        //     // state.newMessageBody = action.body\r\n        //\r\n        // }\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                // newMessageBody: '',\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string) => ({type: SEND_MESSAGE, newMessageBody }) as const\r\n// export const updateNewMessageBodyCreator = (body: string) => {\r\n//     return {\r\n//         type: UPDATE_NEW_MESSAGE_BODY,\r\n//         body: body\r\n//     } as const\r\n// }\r\n\r\nexport default dialogsReducer","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx",[],["151","152"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx",["153"],"import styles from \"../../Users/users.module.css\";\r\nimport preloaderImg from \"../../../img/loading/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div\r\n        className={styles.preloader}>\r\n        <img src={preloaderImg}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx",["154"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["155"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\n\r\nconst ProfileInfo = (props: any) => {\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    console.log(props.profile.contacts)\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img src= {'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>*/}\r\n            {/*</div>*/}\r\n            <div className = {s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"User photo\"/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>User name: {props.profile.fullName}</div>\r\n                {/*<div>{props.profile.lookingForAJob}</div>*/}\r\n                {/*<div>{props.profile.lookingForAJobDescription}</div>*/}\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx",["156","157","158"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx",["159","160","161","162"],"import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from './Dialogs.module.css'\r\n// import { NavLink } from 'react-router-dom';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport store, {rootAppStateType, StoreReduxType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    SendMessage: (values: string) => void\r\n    isAuth: boolean\r\n\r\n}\r\nexport type DialogsFormDatatype = {\r\n    newMessageBody: string\r\n    addNewMessage: (values: string) => void\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let dialogsElements = store.getState().messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = store.getState().messagesPage.messages.map(m => <Message message={m.message}/>)\r\n    // let newMessageBody = store.getState().messagesPage.newMessageBody\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.SendMessage()\r\n    // }\r\n\r\n\r\n    // let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     props.updateNewMessageBody(e.currentTarget.value)\r\n    // }\r\n\r\n    // let onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if ((event.ctrlKey) && (event.charCode === 13)) {\r\n    //         props.SendMessage();\r\n    //     }\r\n    // }\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.SendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (props.isAuth === false) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength70 = maxLengthCreator(70)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<DialogsFormDatatype>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[requiredField, maxLength70]}\r\n                       name={'newMessageBody'}\r\n                       placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<DialogsFormDatatype>(\r\n    {form: 'dialogAddMessageForm'}) (AddMessageForm)\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx",["163"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\Users.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\api\\api.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\users-reducer.tsx",["164","165","166"],"import {followingInProgressType, StateActionsTypes, UsersPageType, UsersType} from \"./store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersActionsTypes =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setUsersTotalCount>\r\n    | ReturnType<typeof setToggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\n\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET-USERS';\r\nexport const SET_CURRENT_PAGE = 'SET-CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nexport const TOGGLE_IN_FOLLOWING_PROGRESS = 'TOGGLE-IN-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<followingInProgressType>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: StateActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IN_FOLLOWING_PROGRESS: {\r\n            const followingInProgressObject = {isFetching: action.isFetching, userId: action.userId}\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, followingInProgressObject]\r\n                    : state.followingInProgress.filter(el => el.userId !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId}) as const\r\n\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId}) as const\r\n\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USERS, users}) as const\r\n\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const\r\n\r\nexport const setUsersTotalCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n}) as const\r\n\r\nexport const setToggleIsFetching = (isFetching: boolean) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching\r\n}) as const\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IN_FOLLOWING_PROGRESS,\r\n    isFetching: isFetching,\r\n    userId: userId\r\n}) as const\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {                                    // thunkCreator\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setToggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setToggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setUsersTotalCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {                                    // thunkCreator\r\n    return (dispatch: Dispatch) => {                                      ////////////////////////\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode == 0) {dispatch(followSuccess(userId))}\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {                                    // thunkCreator\r\n    return (dispatch: Dispatch) => {                                          ////////////////////\r\n        dispatch(toggleFollowingProgress(true, userId))                                         // if true - button is disabled\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode == 0) {dispatch(unfollowSuccess(userId))}\r\n                dispatch(toggleFollowingProgress(false, userId))                                // if false - button is enabled\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\login.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["167"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Login\\LoginForm.tsx",["168"],"C:\\works\\itcamasutra.by\\social_network\\src\\utils\\validators\\validators.tsx",["169"],"import React from 'react'\r\n\r\nexport type maxLengthCreatorType = ReturnType<typeof maxLengthCreator>\r\n\r\nexport const requiredField = (value: string) => {\r\n    if(value) return undefined\r\n    else {\r\n        return 'Field is required'\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    else {\r\n        return undefined\r\n    }\r\n}\r\n// export const maxLength30: maxLengthCreatorType = maxLengthCreator(30)\r\n","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\FormsControls\\FormsControls.tsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":12,"column":9,"nodeType":"176","endLine":13,"endColumn":2755},{"ruleId":"170","replacedBy":"177"},{"ruleId":"172","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"170","replacedBy":"183"},{"ruleId":"172","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":11,"column":7,"nodeType":"181","messageId":"187","endLine":11,"endColumn":17},{"ruleId":"170","replacedBy":"188"},{"ruleId":"172","replacedBy":"189"},{"ruleId":"179","severity":1,"message":"190","line":27,"column":5,"nodeType":"181","messageId":"182","endLine":27,"endColumn":14},{"ruleId":"170","replacedBy":"191"},{"ruleId":"172","replacedBy":"192"},{"ruleId":"174","severity":1,"message":"175","line":9,"column":9,"nodeType":"176","endLine":9,"endColumn":34},{"ruleId":"179","severity":1,"message":"193","line":1,"column":9,"nodeType":"181","messageId":"182","endLine":1,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":18,"column":17,"nodeType":"176","endLine":18,"endColumn":73},{"ruleId":"179","severity":1,"message":"196","line":4,"column":22,"nodeType":"181","messageId":"182","endLine":4,"endColumn":35},{"ruleId":"179","severity":1,"message":"180","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":13},{"ruleId":"179","severity":1,"message":"197","line":62,"column":40,"nodeType":"181","messageId":"182","endLine":62,"endColumn":46},{"ruleId":"179","severity":1,"message":"193","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":27},{"ruleId":"179","severity":1,"message":"198","line":1,"column":29,"nodeType":"181","messageId":"182","endLine":1,"endColumn":42},{"ruleId":"179","severity":1,"message":"199","line":6,"column":16,"nodeType":"181","messageId":"182","endLine":6,"endColumn":32},{"ruleId":"179","severity":1,"message":"200","line":6,"column":34,"nodeType":"181","messageId":"182","endLine":6,"endColumn":48},{"ruleId":"179","severity":1,"message":"201","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"202","line":1,"column":53,"nodeType":"181","messageId":"182","endLine":1,"endColumn":66},{"ruleId":"203","severity":1,"message":"204","line":124,"column":45,"nodeType":"205","messageId":"206","endLine":124,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":135,"column":45,"nodeType":"205","messageId":"206","endLine":135,"endColumn":47},{"ruleId":"179","severity":1,"message":"207","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":9},{"ruleId":null,"fatal":true,"severity":2,"message":"208","line":39,"column":41},{"ruleId":"179","severity":1,"message":"180","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["209"],["210"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["209"],["210"],"@typescript-eslint/no-redeclare","'DialogItem' is already defined.","redeclared",["209"],["210"],"'stateCopy' is defined but never used.",["209"],["210"],"'ChangeEvent' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'ThunkDispatch' is defined but never used.","'isAuth' is assigned a value but never used.","'KeyboardEvent' is defined but never used.","'rootAppStateType' is defined but never used.","'StoreReduxType' is defined but never used.","'axios' is defined but never used.","'UsersPageType' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'s' is defined but never used.","Parsing error: Unexpected token. Did you mean `{'>'}` or `&gt;`?","no-global-assign","no-unsafe-negation"]