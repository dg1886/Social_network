[{"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx":"1","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx":"2","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx":"3","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx":"4","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"5","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"6","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"7","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx":"8","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx":"9","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx":"10","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx":"11","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx":"12","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx":"13","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx":"14","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"15","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"16","C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx":"17","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx":"18","C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx":"19","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx":"20","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx":"21"},{"size":1758,"mtime":1615559932249,"results":"22","hashOfConfig":"23"},{"size":2751,"mtime":1615134786268,"results":"24","hashOfConfig":"23"},{"size":3224,"mtime":1615825685017,"results":"25","hashOfConfig":"23"},{"size":2810,"mtime":1615131621977,"results":"26","hashOfConfig":"23"},{"size":2598,"mtime":1612883039156,"results":"27","hashOfConfig":"23"},{"size":483,"mtime":1608644734488,"results":"28","hashOfConfig":"23"},{"size":501,"mtime":1608642801450,"results":"29","hashOfConfig":"23"},{"size":1762,"mtime":1612881892909,"results":"30","hashOfConfig":"23"},{"size":351,"mtime":1615136331263,"results":"31","hashOfConfig":"23"},{"size":307,"mtime":1613910605014,"results":"32","hashOfConfig":"23"},{"size":307,"mtime":1608901535726,"results":"33","hashOfConfig":"23"},{"size":2305,"mtime":1615818798830,"results":"34","hashOfConfig":"23"},{"size":3155,"mtime":1615131621938,"results":"35","hashOfConfig":"23"},{"size":516,"mtime":1615131982102,"results":"36","hashOfConfig":"23"},{"size":3674,"mtime":1612973585167,"results":"37","hashOfConfig":"23"},{"size":915,"mtime":1615816516058,"results":"38","hashOfConfig":"23"},{"size":972,"mtime":1612518366983,"results":"39","hashOfConfig":"23"},{"size":1054,"mtime":1613208606738,"results":"40","hashOfConfig":"23"},{"size":1028,"mtime":1615824345042,"results":"41","hashOfConfig":"23"},{"size":2562,"mtime":1612533427847,"results":"42","hashOfConfig":"23"},{"size":1402,"mtime":1615828856335,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rwg8km",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\works\\itcamasutra.by\\social_network\\src\\App.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\profile-reducer.tsx",[],["92","93"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\Header.tsx",["94"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["95","96","97"],"import React, {ChangeEvent} from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from\"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport store, {rootAppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n// import StoreContext from \"../../../StoreContext\";\r\n\r\n\r\n// type propsPostType = {\r\n//     store: StoreReduxType\r\n//     profilePage: ProfilePageType\r\n// }\r\n//\r\n\r\n\r\n\r\nlet mapStateToProps = (state: rootAppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n\r\n    return {\r\n        addPost: (value: string) => {\r\n            dispatch(addPostActionCreator(value))\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n/*    const MyPostsContainer = (props: any) => {\r\n\r\n\r\n        return (\r\n            <StoreContext.Consumer>\r\n                {(store: any) => {\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator(store.getState().profilePage.newPostText))\r\n\r\n                    }\r\n                    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n                        store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n                    }\r\n\r\n                    return <MyPosts updateNewPostText={onPostChange}\r\n                                    addPost={addPost}\r\n                                    postsElements={store.getState().profilePage.posts}\r\n                        // store={store}\r\n                    />\r\n                }\r\n\r\n                }\r\n            </StoreContext.Consumer>\r\n        )\r\n\r\n    }*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const MyPostsContainer = (props: propsPostType) => {\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator(props.profilePage.newPostText))\r\n//\r\n//     }\r\n//     let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n//\r\n//         props.store.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n//     }\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={addPost}\r\n//                  postsElements={props.profilePage.posts}\r\n//                  store={store}\r\n//         />\r\n//     )\r\n//\r\n// }",["98","99"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",["100"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\dialogs-reducer.tsx",["101"],"\r\nimport {MessagePageType, StateActionsTypes} from \"./store\";\r\n\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';  //имя экшена\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE';  //имя экшена\r\n\r\nexport type DialogsActionsTypes =  ReturnType<typeof updateNewMessageBodyCreator> | ReturnType<typeof sendMessageCreator>\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Igar FatPunch'},\r\n        {id: 2, name: 'Sizy Dog'},\r\n        {id: 3, name: 'Sashka Pravoslavnenky'},\r\n        {id: 4, name: 'Sashka Veter'},\r\n        {id: 5, name: 'Martin Borman'},\r\n        {id: 6, name: 'Michail Redwood'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'What a fuck?'},\r\n        {id: 2, message: 'All Cops Are Bastards'},\r\n        {id: 3, message: 'Yo nigga!'}\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state: MessagePageType = initialState, action: StateActionsTypes) => {\r\nlet stateCopy\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n            // state.newMessageBody = action.body\r\n\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE }) as const\r\nexport const updateNewMessageBodyCreator = (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer",["102","103"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\common\\Preloader\\Preloader.tsx",["104"],"import styles from \"../../Users/users.module.css\";\r\nimport preloaderImg from \"../../../img/loading/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div\r\n        className={styles.preloader}>\r\n        <img src={preloaderImg}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileContainer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\store.tsx",["105"],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\redux-store.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["106","107"],"C:\\works\\itcamasutra.by\\social_network\\src\\index.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\redux\\auth-reducer.tsx",[],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Dialogs\\Dialogs.tsx",["108"],"C:\\works\\itcamasutra.by\\social_network\\src\\Components\\Header\\HeaderContainer.tsx",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":12,"column":9,"nodeType":"116","endLine":12,"endColumn":2757},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":27},{"ruleId":"117","severity":1,"message":"122","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":11,"column":7,"nodeType":"119","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"117","severity":1,"message":"128","line":27,"column":5,"nodeType":"119","messageId":"120","endLine":27,"endColumn":14},{"ruleId":"110","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":9,"nodeType":"116","endLine":9,"endColumn":34},{"ruleId":"117","severity":1,"message":"121","line":1,"column":9,"nodeType":"119","messageId":"120","endLine":1,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":14,"column":17,"nodeType":"116","endLine":14,"endColumn":129},{"ruleId":"131","severity":1,"message":"132","line":17,"column":17,"nodeType":"116","endLine":17,"endColumn":73},{"ruleId":"117","severity":1,"message":"133","line":9,"column":6,"nodeType":"119","messageId":"120","endLine":9,"endColumn":22},{"ruleId":"117","severity":1,"message":"134","line":6,"column":9,"nodeType":"119","messageId":"120","endLine":6,"endColumn":24},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'store' is defined but never used.",["135"],["136"],"@typescript-eslint/no-redeclare","'DialogItem' is already defined.","redeclared","'stateCopy' is defined but never used.",["135"],["136"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'DialogsPropsType' is defined but never used.","'AuthReducerType' is defined but never used.","no-global-assign","no-unsafe-negation"]